create-react-app my-app
video 53

// -- docker and kubernetes --

# docker pull node:lts-alpine
# docker build -t microservice/posts . #nombre de la imagen
# docker run  -d  -p 4000:4000  --name posts-service microservice/posts
# docker run microservice/posts sh
# docker restart
# docker exec -it container_id
#  docker push guerrerocristian/posts # subir imagen a docker hub
//-- -- kubernetes -------
kubectl apply -f posts.yaml # crea una objeto de configuración (en este caso de pods en la carpeta infra/k8s)
kubectl get pods # muestra la lista de los pods creados 
kubectl version
kubectl permite interactuar con el cluster de kubernetes
kubernetes cluster: es una coleccion de nodos y un master para manejarlos
kubernetes pod : es un conjunto de contenedores dentro de un node
kubernetes node : es una maquina física o virtual
kubernetes deployment: se encarga de que los pods esten corriendo correctamente (arranca reinicia cuando es necesario) (monitorea pods identicos con los mismos contenedores dentro )
kubernetes service: se encarga de dar acceso a los contenedores corriendo dentro de un pod dentro de un node (ofrece una url para acceder al contenedor)

# kubernetes commands
kubectl apply -f .  # ejecuta todos los archivos de configuración en un directorio

#kubernetes pods

kubectl get pods
kubectl exec -it [pod_name] [cmd]
kubectl logs [pod_name]
kubectl delete pod [pod_name]
kubectl apply -f [config file name ]
kubectl describe pod [pod_name]

#kubernetes deployments

kubectl get deployments
kubectl describe deploiment [depl name]
kubectl apply -f [config file name ]
kubectl delete deploiment [depl_name]
kubectl rollout restart deployment [depl name ] (carga cambios en imagen para un development ya desplegado)

#kubernetes services
cluster ip: permite el acceso de un pod a otro a traves de una url 
node port: permite que el pod sea accesible desde el exterior (propositos de desarrollo )
load balancer: permite que los pods sean accesibles desde afuera del cluster
external name: redirecciona una peticion interna del cluster a una CNAME
kubectl apply -f [service config file ]

// kubernete ingress 
https://kubernetes.github.io/ingress-nginx/deploy/

# for mac mandatory
# kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.41.0/deploy/static/provider/cloud/deploy.yaml
for minikube
# minikube addons enable ingress

